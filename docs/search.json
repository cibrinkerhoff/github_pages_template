[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Welcome to my data science portfolio! This site shows my journey learning data science and analytics. Here you’ll find projects that demonstrate what I’ve learned and discovered.\n\n\nThis portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages.\n\n\n\n\nProgramming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data\n\n\n\n\n\n\n\nLearn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "index.html#about-this-portfolio",
    "href": "index.html#about-this-portfolio",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "This portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages."
  },
  {
    "objectID": "index.html#skills-im-learning",
    "href": "index.html#skills-im-learning",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Programming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data"
  },
  {
    "objectID": "index.html#my-projects",
    "href": "index.html#my-projects",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Learn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/index.html#all-projects",
    "href": "projects/index.html#all-projects",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/eda.html",
    "href": "projects/eda.html",
    "title": "EDA Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "EDA Project"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Write a brief introduction about yourself here. Include:\n\nYour academic background\nYour interest in data science\nYour career goals\nAny relevant experience or projects"
  },
  {
    "objectID": "about.html#background",
    "href": "about.html#background",
    "title": "About Me",
    "section": "",
    "text": "Write a brief introduction about yourself here. Include:\n\nYour academic background\nYour interest in data science\nYour career goals\nAny relevant experience or projects"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n\n[Statistics] - Brigham Young University, 2026\nRelevant Coursework: Statistics, Data Analysis, Programming, Machine Learning, Probabibility and Inference, Data Visualization"
  },
  {
    "objectID": "about.html#skills-interests",
    "href": "about.html#skills-interests",
    "title": "About Me",
    "section": "Skills & Interests",
    "text": "Skills & Interests\n\nTechnical Skills\n\nProgramming: Python, R, SQL, C++\nData Analysis: Pandas, NumPy\nVisualization: Matplotlib, Seaborn, GGplot\nMachine Learning: Scikit-learn\nTools: Jupyter Notebooks, Git/GitHub\n\n\n\nAreas of Interest\n\nBI and Data Visualization\nMachine Learning and AI\nData Consulting"
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About Me",
    "section": "Goals",
    "text": "Goals\nDescribe what you hope to achieve through your data science journey:\n\nShort-term learning objectives\nLong-term career aspirations\nTypes of problems you want to solve"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About Me",
    "section": "Contact",
    "text": "Contact\n\nEmail: brink.corbin@gmail.com\nGitHub: github.com/your-cibrinkerhoff\nLinkedIn: linkedin.com/in/your-profile\n\n\nThis portfolio showcases my learning progress and projects completed during my data science studies."
  },
  {
    "objectID": "projects/data-acquisition.html",
    "href": "projects/data-acquisition.html",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/final-project.html",
    "href": "projects/final-project.html",
    "title": "Final Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "blogtopic.html",
    "href": "blogtopic.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "blogtopic.html#introduction",
    "href": "blogtopic.html#introduction",
    "title": "",
    "section": "Introduction",
    "text": "Introduction\nIn this blog post, I will explain the basics of linear regression. I will provide simple code that can be used to plot your own scatterplots and calculate correlations at home or for a simple project at work. I will also tell you how you can interpret variable relationships using correlation. Linear regression is a simple tool used to see if two different things (often referred to as variables) have a relationship. These “things” can be anything! It could be the level of stress someone experiences and its relationship to how much work there is at one’s school or job, or, in our example today, whether the amount spent in our advertising budget has a relationship with how many sales are made.\n\nNote: The data used today was randomly generated by a computer. This data in no way indicates the relationship between Advertising Budget and Sales and should not be used in any way other than to demonstrate how to use linear regression in Python."
  },
  {
    "objectID": "blogtopic.html#tidy-data",
    "href": "blogtopic.html#tidy-data",
    "title": "",
    "section": "Tidy Data",
    "text": "Tidy Data\nOne of the most important things you can do for yourself is to have tidy data. Depending on how your data is given to you, it can make the whole coding process exponentially easier. While we will not go into how to create tidy data in this blog post, know that if you have data in a format where you have a clear x and y variable, it will make your life a lot easier."
  },
  {
    "objectID": "blogtopic.html#python-packages",
    "href": "blogtopic.html#python-packages",
    "title": "",
    "section": "Python Packages",
    "text": "Python Packages\nWe will be using five different Python packages in our code. I will list what they are and briefly explain what we will be using them for. Know that there is much more to each of these packages, but since we are learning about the simple linear regression model and not about packages themselves, I will briefly explain what they are used for.\n\npandas was used to organize and manipulate the data.\n\nseaborn was used to create visualizations like scatterplots and regression lines.\n\nmatplotlib.pyplot was used to customize and save our plots.\n\nscipy.stats was used to calculate the correlation coefficient.\n\nsklearn.linear_model was used to fit and interpret the linear regression model.\n\n\nNote: numpy is another package used in the code, but it was simply used to create the data. You shouldn’t need it otherwise."
  },
  {
    "objectID": "blogtopic.html#simple-linear-regression",
    "href": "blogtopic.html#simple-linear-regression",
    "title": "",
    "section": "Simple Linear Regression",
    "text": "Simple Linear Regression\nLinear regression is used to show the relationship between two variables—how your x variable affects your y value. Below is the simple linear regression equation:\n\\[\n\\hat{y} = \\beta_0 + \\beta_1 x\n\\]\nIf you remember your algebra class, you might notice that it appears to be the equation of a line. You would be correct. Linear regression is centered around this line equation. When we perform simple linear regression, we fit data to a best-fit line. Using this line, we are then able to see a quantifiable relationship between our two values based on our data. We can even predict what our given y would be if we had an x value we were curious about. This is where the power of linear regression comes into play, especially for data-driven decisions made by companies. The only limitation of our linear regression model is if the x value we desire to calculate is below our minimum or above our maximum x value.\n\nSlope and Intercept\nThe equation for linear regression doesn’t mean much if we can’t explain the two other values in the equation.\n\n\\[\\beta_1\\] is the slope of our line. It is found using the equation below:\n\n\\[\n\\beta_1 = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}\n{\\sum_{i=1}^{n} (x_i - \\bar{x})^2}\n\\]\nHere, \\[\\bar{x}\\] is the average of all the x values in the sample, and \\[\\bar{y}\\] is the average of the y values.\n\\[x_i\\] is an individual x value, and \\[y_i\\] is the corresponding y value.\n\nThe intercept of the line is \\[\\beta_0\\]. It is found using the equation below:\n\n\\[\n\\beta_0 = \\bar{y} - \\beta_1 \\bar{x}\n\\]"
  },
  {
    "objectID": "blogtopic.html#coding-a-graph-in-python",
    "href": "blogtopic.html#coding-a-graph-in-python",
    "title": "",
    "section": "Coding a Graph in Python",
    "text": "Coding a Graph in Python\nThis is how you would code a simple linear regression model using Python.\n\nStep 1: Start with your packages\nimport pandas as pd\n# numpy is not needed unless you want to create your own data\nimport numpy as np\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import pearsonr\nfrom sklearn.linear_model import LinearRegression\n\n\n(This was the code used to create the data.)\nn = 100\nadvertising_budget = np.random.normal(loc=50, scale=15, size=n)\nsales = 2.5 * advertising_budget + np.random.normal(loc=0, scale=10, size=n)\n\n\nStep 2: Create Data Frame using pd.DataFrame(‘’:x value, ‘’:y value)\ndf = pd.DataFrame({\n    'Advertising Budget (in thousands)': advertising_budget,\n    'Sales (in thousands)': sales\n})\n\n\nStep 3: Create your model using code below\nmodel = LinearRegression()\n# Use model.fit(df[['&lt;x-axis title&gt;']], df['&lt;y-axis title&gt;'])\nmodel.fit(df[['Advertising Budget (in thousands)']], df['Sales (in thousands)'])\n# df['&lt;Predicted (whatever you want)&gt;']=model.predict(df[['&lt;x-axis title&gt;']])\ndf['Predicted Sales'] = model.predict(df[['Advertising Budget (in thousands)']])\n\n\nStep 4: Plot Scatterplot with regression line using code below\n# set figure size\nplt.figure(figsize=(10, 6))\n# plug in x and y accordingly\nsns.scatterplot(data=df, x='Advertising Budget (in thousands)', y='Sales (in thousands)', label='Actual Sales')\nsns.lineplot(data=df, x='Advertising Budget (in thousands)', y='Predicted Sales', color='red', label='Regression Line')\n# modify title and x and y names on the graph\nplt.title('Advertising Budget vs Sales')\nplt.xlabel('Advertising Budget (in thousands)')\nplt.ylabel('Sales (in thousands)')\n# other aesthetic things\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nThis code gives the following graph:"
  },
  {
    "objectID": "blogtopic.html#we-will-be-using-five-different-python-packages-in-our-code.-i-will-list-what-they-are-and-briefly-explain-what-we-will-be-using-them-for.-know-that-there-is-a-lot-more-to-each-of-these-packages-but-since-we-are-learning-about-the-simple-linear-regression-model-and-not-about-packages-i-will-briefly-explain-what-they-are-used-for.",
    "href": "blogtopic.html#we-will-be-using-five-different-python-packages-in-our-code.-i-will-list-what-they-are-and-briefly-explain-what-we-will-be-using-them-for.-know-that-there-is-a-lot-more-to-each-of-these-packages-but-since-we-are-learning-about-the-simple-linear-regression-model-and-not-about-packages-i-will-briefly-explain-what-they-are-used-for.",
    "title": "",
    "section": "We will be using five different python packages in our code. I will list what they are and briefly explain what we will be using them for. Know that there is a lot more to each of these packages, but since we are learning about the simple linear regression model and not about packages, I will briefly explain what they are used for.",
    "text": "We will be using five different python packages in our code. I will list what they are and briefly explain what we will be using them for. Know that there is a lot more to each of these packages, but since we are learning about the simple linear regression model and not about packages, I will briefly explain what they are used for.\npandas was used to organize and manipulate the data. - seaborn was used to create visualizations like scatterplots and regression lines. - matplotlib.pyplot was used to customize and save our plots. - scipy.stats was used to calculate the correlation coefficient. - sklearn.linear_model was used to fit and interpret the linear regression model.\n\nNote: numpy is another package that I used in the code, but it was simply used to create the data. You shouldn’t need it otherwise."
  },
  {
    "objectID": "blogtopic.html#cor",
    "href": "blogtopic.html#cor",
    "title": "",
    "section": "Cor",
    "text": "Cor"
  },
  {
    "objectID": "blogtopic.html#correlation-coefficient",
    "href": "blogtopic.html#correlation-coefficient",
    "title": "",
    "section": "Correlation Coefficient",
    "text": "Correlation Coefficient\nThe correlation coefficient is a number that tells you how strong the relationship is between your two variables. It is found using the pearsonr function from the scipy.stats package. The correlation coefficient is a number between -1 and 1. A correlation of 1 means that there is a perfect positive linear relationship between the two variables. A correlation of -1 means that there is a perfect negative linear relationship between the two variables. A correlation of 0 means that there is no linear relationship between the two variables. It is rare to have a correlation of exactly 1 or -1 in real life data, but the closer you are to those numbers, the stronger the relationship is.\nThe equation for the correlation coefficient is below:\n\\[\nr = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}\n{\\sqrt{\\sum_{i=1}^{n} (x_i - \\bar{x})^2} \\sqrt{\\sum_{i=1}^{n} (y_i - \\bar{y})^2}}\n\\]\nYou can calculate the correlation coefficient using the following code.\ncorrelation, _ = pearsonr(df['Advertising Budget (in thousands)'], df['Sales (in thousands)'])\nThis code returns a correlation of approximately 0.97, indicating a very strong positive linear relationship between advertising budget and sales in this example."
  },
  {
    "objectID": "blogtopic.html#correlation-coefficient-1",
    "href": "blogtopic.html#correlation-coefficient-1",
    "title": "",
    "section": "Correlation Coefficient",
    "text": "Correlation Coefficient\nThe correlation coefficient is a number that tells you how strong the relationship is between your two variables. It is found using the pearsonr function from the scipy.stats package. The correlation coefficient is a number between -1 and 1. A correlation of 1 means that there is a perfect positive linear relationship between the two variables. A correlation of -1 means that there is a perfect negative linear relationship between the two variables. A correlation of 0 means that there is no linear relationship between the two variables. It is rare to have a correlation of exactly 1 or -1 in real life data, but the closer you are to those numbers, the stronger the relationship is.\nThe equation for the correlation coefficient is below:\n\\[\nr = \\frac{\\sum_{i=1}^{n} (x_i - \\bar{x})(y_i - \\bar{y})}\n{\\sqrt{\\sum_{i=1}^{n} (x_i - \\bar{x})^2} \\sqrt{\\sum_{i=1}^{n} (y_i - \\bar{y})^2}}\n\\]\nYou can calculate the correlation coefficient using the following code.\n\n:::"
  },
  {
    "objectID": "blogtopic.html#conclusion",
    "href": "blogtopic.html#conclusion",
    "title": "",
    "section": "Conclusion",
    "text": "Conclusion\nIn conclusion, linear regression is a powerful tool that can help you understand the relationship between two variables. By fitting a best-fit line to your data, you can quantify how changes in one variable may affect another. The correlation coefficient further aids in assessing the strength and direction of this relationship. With the provided Python code, you can easily implement linear regression and visualize the results, making it a valuable skill for data analysis in various fields. Whether you’re working on academic research or business analytics, mastering linear regression will enhance your ability to make informed decisions based on data. Try it out, you will find it easier than you think!\nThank you for reading my blog post! If you have any questions or comments, feel free to reach out."
  }
]